# Build the Go Binary.
FROM golang:1.25 AS build_service

ENV CGO_ENABLED=0
ARG BUILD_REF

# Create /app and copy all source files, including go.mod, go.sum, and the vendor folder.
WORKDIR /app
COPY . .

# Build the service binary, explicitly telling 'go build' to use the local vendor folder.
# The main package is assumed to be under /app/api/ecom-api.
WORKDIR /app/api/ecom-api

# The -mod=vendor flag tells Go to ONLY use dependencies from the vendor folder.
# The output binary is correctly set to /app/ecom-api.
RUN go build -mod=vendor -o /app/ecom-api -ldflags "-X main.build=${BUILD_REF}"

#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------

# Run the Go Binary in Alpine.
FROM alpine:3.22

ARG BUILD_DATE
ARG BUILD_REF

# Create a non-root user and group.
RUN addgroup -g 1000 -S ecom && \
    adduser -u 1000 -h /app -G ecom -S ecom

# The COPY command now correctly sources the binary from /app/ecom-api 
# in the 'build_service' stage.
COPY --from=build_service --chown=ecom:ecom /app/ecom-api /app/ecom-api

# Set the working directory to the application root.
WORKDIR /app

# Switch to the non-root user for security.
USER ecom

# Set the binary as executable.
RUN chmod +x ./ecom-api

# Execute the binary.
CMD ["./ecom-api"]